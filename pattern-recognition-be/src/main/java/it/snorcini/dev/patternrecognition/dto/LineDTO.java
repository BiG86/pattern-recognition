package it.snorcini.dev.patternrecognition.dto;

import it.snorcini.dev.patternrecognition.error.PatternRecognitionValidationErrors;
import jakarta.validation.constraints.NotNull;
import lombok.Data;
import org.springframework.validation.annotation.Validated;

import java.util.ArrayList;
import java.util.List;

/**
 * DTO used for Line info.
 * <p>
 * Methods are auto-generated by Lombok.
 * <p>
 */
@Data
@Validated
public class LineDTO {
    @NotNull(message = PatternRecognitionValidationErrors.COORDINATE_NULL)
    protected PointDTO startPoint;
    @NotNull(message = PatternRecognitionValidationErrors.COORDINATE_NULL)
    protected PointDTO endPoint;

    private List<PointDTO> points;
    public LineDTO(final PointDTO startPoint, final PointDTO endPoint) {
        this.points = new ArrayList<>();
        this.points.add(startPoint);
        this.points.add(endPoint);
    }
}
